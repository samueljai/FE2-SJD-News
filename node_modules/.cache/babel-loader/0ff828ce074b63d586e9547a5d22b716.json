{"ast":null,"code":"import _toConsumableArray from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/src/Components/NewArticle.jsx\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport '../CSS/NewArticle.css';\nimport * as api from '../Utils/api';\n\nvar NewArticle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewArticle, _Component);\n\n  function NewArticle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewArticle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewArticle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      topics: [],\n      selectedTopic: \"\"\n    };\n\n    _this.fetchTopics = function () {\n      api.getTopics().then(function (topics) {\n        return _this.setState({\n          topics: topics,\n          loading: false\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleTopicSelect = function (event) {\n      var value = event.target.value;\n\n      _this.setState({\n        selectedTopic: value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewArticle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          topics = _this$state.topics,\n          loading = _this$state.loading,\n          selectedTopic = _this$state.selectedTopic;\n      var _this$props = this.props,\n          toggleSidebar = _this$props.toggleSidebar,\n          topic = _this$props.topic,\n          loggedIn = _this$props.loggedIn;\n      var heading = topic === \"undefined\" ? 'Create a New Article' : \"Create a New \".concat(topic.charAt(0).toUpperCase() + topic.slice(1), \" Article\");\n\n      if (!loading) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, React.createElement(Header, {\n          toggleSidebar: toggleSidebar,\n          heading: heading,\n          loggedIn: loggedIn,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }), React.createElement(\"main\", {\n          className: \"newArticleMain\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"Select a Topic: get the array of topics, map over and put into the list\"), React.createElement(\"select\", {\n          value: selectedTopic,\n          onChange: this.handleTopicSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          default: true,\n          value: \"new\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"New Topic\"), _toConsumableArray(topics).map(function (catToAdd) {\n          return React.createElement(\"option\", {\n            key: catToAdd,\n            value: catToAdd,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, catToAdd);\n        }), React.createElement(\"option\", {\n          key: \"created_at\",\n          value: \"created_at\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Date Created\"), React.createElement(\"option\", {\n          key: \"comment_count\",\n          value: \"comment_count\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Comments\"), React.createElement(\"option\", {\n          key: \"votes\",\n          value: \"votes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Votes\"))), React.createElement(\"form\", {\n          className: \"newTopicForm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \" if New Topic is selected:\", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"New Topic Name Field\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"New Topic Description Field\")), React.createElement(\"form\", {\n          className: \"newArticleForm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Article Title:\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Article:\"))));\n      } else return React.createElement(\"p\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"is loading...\");\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchTopics();\n    }\n  }]);\n\n  return NewArticle;\n}(Component);\n\nexport default NewArticle;","map":{"version":3,"sources":["/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/src/Components/NewArticle.jsx"],"names":["React","Component","Header","api","NewArticle","state","loading","topics","selectedTopic","fetchTopics","getTopics","then","setState","catch","err","console","log","handleTopicSelect","event","value","target","props","toggleSidebar","topic","loggedIn","heading","charAt","toUpperCase","slice","map","catToAdd"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header';\nimport '../CSS/NewArticle.css';\nimport * as api from '../Utils/api';\n\nclass NewArticle extends Component {\n\n  state = {\n    loading: true,\n    topics: [],\n    selectedTopic: \"\"\n  }\n\n  render() {\n    const { topics, loading, selectedTopic } = this.state\n    const { toggleSidebar, topic, loggedIn } = this.props;\n    const heading = (topic === \"undefined\") ?\n      'Create a New Article'\n      : `Create a New ${topic.charAt(0).toUpperCase() + topic.slice(1)} Article`;\n\n\n    if (!loading) {\n      return (\n        <React.Fragment>\n          <Header toggleSidebar={toggleSidebar} heading={heading} loggedIn={loggedIn} />\n          <main className=\"newArticleMain\">\n            <div>\n              <p>Select a Topic: get the array of topics, map over and put into the list</p>\n              <select value={selectedTopic} onChange={this.handleTopicSelect} >\n                <option default value=\"new\">New Topic</option>\n                {[...topics].map(catToAdd => (\n                  <option key={catToAdd} value={catToAdd}>{catToAdd}</option>\n                ))}\n                <option key=\"created_at\" value=\"created_at\">Date Created</option>\n                <option key=\"comment_count\" value=\"comment_count\">Comments</option>\n                <option key=\"votes\" value=\"votes\">Votes</option>\n              </select >\n            </div>\n            <form className=\"newTopicForm\"> if New Topic is selected:\n            <p>New Topic Name Field</p>\n              <p>New Topic Description Field</p>\n            </form>\n            <form className=\"newArticleForm\">\n              <p>Article Title:</p>\n              <p>Article:</p>\n            </form>\n          </main>\n        </React.Fragment>\n      )\n    }\n    else return (<p className=\"loading\">is loading...</p>);\n  }\n\n  componentDidMount() {\n    this.fetchTopics();\n  }\n\n  fetchTopics = () => {\n    api.getTopics()\n      .then(topics => this.setState({ topics, loading: false }))\n      .catch(err => console.log(err))\n  }\n\n  handleTopicSelect = event => {\n    const { value } = event.target;\n    this.setState({\n      selectedTopic: value,\n    });\n  };\n}\n\nexport default NewArticle;"]},"metadata":{},"sourceType":"module"}