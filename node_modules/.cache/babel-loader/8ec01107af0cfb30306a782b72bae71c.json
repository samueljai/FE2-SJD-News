{"ast":null,"code":"import _defineProperty from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/src/Components/NewArticle.jsx\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport '../CSS/NewArticle.css';\nimport * as api from '../Utils/api';\nimport * as format from '../Utils/formatting';\nimport { navigate } from '@reach/router';\nimport ErrorPage from './ErrorPage';\n\nvar NewArticle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewArticle, _Component);\n\n  function NewArticle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewArticle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewArticle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      slugs: [],\n      selectedTopic: \"New\",\n      newTopicName: \"\",\n      newTopicDesc: \"\",\n      newArticleName: \"\",\n      newArticleBody: \"\",\n      newTopic: \"\",\n      newArticleID: 0,\n      err: ''\n    };\n\n    _this.fetchTopics = function () {\n      api.getTopics().then(function (topics) {\n        var slugs = topics.map(function (topic) {\n          return topic.slug.charAt(0).toUpperCase() + topic.slug.slice(1);\n        }).sort();\n\n        _this.setState({\n          slugs: slugs,\n          loading: false\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleTopicSelect = function (event) {\n      var value = event.target.value;\n\n      _this.setState({\n        selectedTopic: value\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          id = _event$target.id,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, id, value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault(); // get information from the state\n\n      var _this$state = _this.state,\n          newTopicDesc = _this$state.newTopicDesc,\n          newTopicName = _this$state.newTopicName,\n          selectedTopic = _this$state.selectedTopic; // if NEW topic has been selected, call addNewTopic first, then addNewArticle\n      // if existing topic, then just addNewArticle\n\n      if (selectedTopic === \"New\") {\n        // call the post topic function in the api file, pass in the slug and description\n        // returns the added topic, use topic.slug for the next api call\n        api.addNewTopic(format.formatTitle(newTopicName), format.formatText(newTopicDesc)).then(function (_ref) {\n          var slug = _ref.slug;\n\n          _this.setState({\n            newTopic: slug\n          });\n        }).then(function () {\n          return _this.submitNewArticle();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      } else {\n        _this.submitNewArticle();\n      }\n    };\n\n    _this.submitNewArticle = function () {\n      var _this$state2 = _this.state,\n          newArticleBody = _this$state2.newArticleBody,\n          newArticleName = _this$state2.newArticleName,\n          newTopicName = _this$state2.newTopicName,\n          selectedTopic = _this$state2.selectedTopic;\n      var username = _this.props.user.username; // then call the post articlebytopic function with topic, tile, body and username, returns article\n      // reset the state\n      // if NEW topic has been selected, then need to use the newTopicName, \n      // otherwise if it is an existing topic, then use the selected topic\n\n      var topic = selectedTopic === \"New\" ? format.formatTitle(newTopicName) : format.formatTitle(selectedTopic);\n      api.addNewArticle(topic, format.formatTitle(newArticleName), format.formatText(newArticleBody), username).then(function (article) {\n        _this.setState({\n          newArticleID: article[0].article_id\n        }); // navigate to the singlearticle page using article.article id\n\n\n        navigate(\"/articles/\".concat(article[0].article_id));\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NewArticle, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          err = _this$state3.err,\n          slugs = _this$state3.slugs,\n          loading = _this$state3.loading,\n          selectedTopic = _this$state3.selectedTopic;\n      var _this$props = this.props,\n          topic = _this$props.topic,\n          toggleSidebar = _this$props.toggleSidebar,\n          loggedIn = _this$props.loggedIn;\n      var heading = !topic ? 'Create a New Article' : \"Create a New \".concat(topic, \" Article\");\n      if (err) return React.createElement(ErrorPage, {\n        err: err,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });else if (!loading) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(Header, {\n          toggleSidebar: toggleSidebar,\n          heading: heading,\n          loggedIn: loggedIn,\n          display: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), React.createElement(\"main\", {\n          className: \"newArticleMain\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Select a Topic:\"), React.createElement(\"select\", {\n          autoFocus: true,\n          required: true,\n          defaultValue: topic,\n          onChange: this.handleTopicSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          value: \"New\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, \"New Topic\"), slugs.map(function (slug) {\n          return React.createElement(\"option\", {\n            key: slug,\n            value: slug,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, slug);\n        }))), React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          className: \"newArticleForm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, selectedTopic === \"New\" && React.createElement(\"section\", {\n          className: \"newTopicSection\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \" New Topic Details:\", React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"newTopicName\",\n          value: this.state.value,\n          onChange: this.handleChange,\n          placeholder: \"Enter a New Topic Title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), React.createElement(\"textarea\", {\n          required: true,\n          id: \"newTopicDesc\",\n          value: this.state.value,\n          onChange: this.handleChange,\n          placeholder: \"Enter a description for your new topic...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })), React.createElement(\"section\", {\n          className: \"newArticleSection\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \" New Article Details:\", React.createElement(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"newArticleName\",\n          value: this.state.value,\n          onChange: this.handleChange,\n          placeholder: \"Enter a New Article Title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }), React.createElement(\"textarea\", {\n          required: true,\n          id: \"newArticleBody\",\n          value: this.state.value,\n          onChange: this.handleChange,\n          placeholder: \"Enter your new article...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Publish new article\"))));\n      } else return React.createElement(\"p\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"is loading...\");\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // gets topics for dropdown menu\n      this.fetchTopics(); // gets the topic from the url\n\n      var topic = this.props.topic; // if topic exists in url then it changes selectedTopic in the state with it\n\n      if (topic) {\n        this.setState({\n          selectedTopic: topic\n        });\n      }\n    } // fetches all topics and creates a new slugs array in the state to use for the drop down\n\n  }]);\n\n  return NewArticle;\n}(Component);\n\nexport default NewArticle;","map":{"version":3,"sources":["/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/src/Components/NewArticle.jsx"],"names":["React","Component","Header","api","format","navigate","ErrorPage","NewArticle","state","loading","slugs","selectedTopic","newTopicName","newTopicDesc","newArticleName","newArticleBody","newTopic","newArticleID","err","fetchTopics","getTopics","then","topics","map","topic","slug","charAt","toUpperCase","slice","sort","setState","catch","console","log","handleTopicSelect","event","value","target","handleChange","id","handleSubmit","preventDefault","addNewTopic","formatTitle","formatText","submitNewArticle","username","props","user","addNewArticle","article","article_id","toggleSidebar","loggedIn","heading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header';\nimport '../CSS/NewArticle.css';\nimport * as api from '../Utils/api';\nimport * as format from '../Utils/formatting'\nimport { navigate } from '@reach/router';\nimport ErrorPage from './ErrorPage';\n\nclass NewArticle extends Component {\n\n  state = {\n    loading: true,\n    slugs: [],\n    selectedTopic: \"New\",\n    newTopicName: \"\",\n    newTopicDesc: \"\",\n    newArticleName: \"\",\n    newArticleBody: \"\",\n    newTopic: \"\",\n    newArticleID: 0,\n    err: ''\n  }\n\n  render() {\n    const { err, slugs, loading, selectedTopic } = this.state\n    const { topic, toggleSidebar, loggedIn } = this.props;\n\n    const heading = (!topic) ?\n      'Create a New Article'\n      : `Create a New ${topic} Article`;\n\n    if (err) return (<ErrorPage err={err} />)\n    else if (!loading) {\n      return (\n        <React.Fragment>\n          <Header toggleSidebar={toggleSidebar} heading={heading} loggedIn={loggedIn} display={true} />\n          <main className=\"newArticleMain\">\n            <div>\n              <p>Select a Topic:</p>\n              <select autoFocus required defaultValue={topic} onChange={this.handleTopicSelect} >\n                <option value=\"New\">New Topic</option>\n                {slugs.map(slug => {\n                  return (<option key={slug} value={slug}>{slug}</option>)\n                })}\n              </select >\n            </div>\n            <form onSubmit={this.handleSubmit} className=\"newArticleForm\">\n              {(selectedTopic === \"New\") &&\n                <section className=\"newTopicSection\"> New Topic Details:\n                  <input type=\"text\" required id=\"newTopicName\" value={this.state.value} onChange={this.handleChange} placeholder=\"Enter a New Topic Title\" />\n                  <textarea required id=\"newTopicDesc\" value={this.state.value} onChange={this.handleChange} placeholder=\"Enter a description for your new topic...\" />\n                </section>\n              }\n              <section className=\"newArticleSection\"> New Article Details:\n                <input type=\"text\" required id=\"newArticleName\" value={this.state.value} onChange={this.handleChange} placeholder=\"Enter a New Article Title\" />\n                <textarea required id=\"newArticleBody\" value={this.state.value} onChange={this.handleChange} placeholder=\"Enter your new article...\" />\n              </section>\n              <button type=\"submit\">Publish new article</button>\n            </form>\n          </main>\n        </React.Fragment>\n      )\n    }\n    else return (<p className=\"loading\">is loading...</p>);\n  }\n\n  componentDidMount() {\n    // gets topics for dropdown menu\n    this.fetchTopics();\n    // gets the topic from the url\n    const { topic } = this.props\n    // if topic exists in url then it changes selectedTopic in the state with it\n    if (topic) {\n      this.setState({\n        selectedTopic: topic\n      })\n    }\n  }\n\n  // fetches all topics and creates a new slugs array in the state to use for the drop down\n  fetchTopics = () => {\n    api.getTopics()\n      .then(topics => {\n        const slugs = topics.map((topic) => topic.slug.charAt(0).toUpperCase() + topic.slug.slice(1)).sort()\n        this.setState({ slugs, loading: false })\n      })\n      .catch(err => console.log(err))\n  }\n\n  handleTopicSelect = event => {\n    const { value } = event.target;\n    this.setState({\n      selectedTopic: value,\n    });\n  };\n\n  handleChange = (event) => {\n    const { id, value } = event.target;\n    this.setState({\n      [id]: value\n    })\n  }\n\n  // function called when enter has been pressed in the text box, or the submit button has been clicked\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // get information from the state\n    const { newTopicDesc, newTopicName, selectedTopic } = this.state;\n\n    // if NEW topic has been selected, call addNewTopic first, then addNewArticle\n    // if existing topic, then just addNewArticle\n    if (selectedTopic === \"New\") {\n      // call the post topic function in the api file, pass in the slug and description\n      // returns the added topic, use topic.slug for the next api call\n      api.addNewTopic(format.formatTitle(newTopicName), format.formatText(newTopicDesc))\n        .then(({ slug }) => {\n          this.setState({ newTopic: slug })\n        })\n        .then(() => this.submitNewArticle())\n        .catch(err => console.log(err))\n    } else {\n      this.submitNewArticle()\n    }\n  }\n\n  submitNewArticle = () => {\n    const { newArticleBody, newArticleName, newTopicName, selectedTopic } = this.state;\n    const { user: { username } } = this.props\n    // then call the post articlebytopic function with topic, tile, body and username, returns article\n    // reset the state\n    // if NEW topic has been selected, then need to use the newTopicName, \n    // otherwise if it is an existing topic, then use the selected topic\n\n    const topic = (selectedTopic === \"New\") ? format.formatTitle(newTopicName) : format.formatTitle(selectedTopic)\n    api.addNewArticle(topic, format.formatTitle(newArticleName), format.formatText(newArticleBody), username)\n      .then(article => {\n        this.setState({ newArticleID: article[0].article_id })\n        // navigate to the singlearticle page using article.article id\n        navigate(`/articles/${article[0].article_id}`);\n      })\n      .catch(err => console.log(err))\n  }\n\n}\n\nexport default NewArticle;"]},"metadata":{},"sourceType":"module"}