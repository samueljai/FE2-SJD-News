{"ast":null,"code":"// takes a string and returns a string with the first letter of every word capitalised\nexport var formatTitle = function formatTitle(string) {\n  return string.trim().split(\" \").map(function (word) {\n    return word.replace(word[0], word[0].toUpperCase());\n  }).join(\" \");\n}; // takes a string and returns the string with the first letter of each sentence capitalised\n\nexport var formatText = function formatText(string) {\n  var regex1 = RegExp(\"[!\\.?]+ \", 'g');\n  var array1 = [];\n  string = string[0].toUpperCase() + string.slice(1);\n\n  while ((array1 = regex1.exec(string)) !== null) {\n    string = string.slice(0, regex1.lastIndex) + string[regex1.lastIndex].toUpperCase() + string.slice(regex1.lastIndex + 1);\n  }\n\n  return string;\n};","map":{"version":3,"sources":["/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/src/Utils/formatting.js"],"names":["formatTitle","string","trim","split","map","word","replace","toUpperCase","join","formatText","regex1","RegExp","array1","slice","exec","lastIndex"],"mappings":"AAAA;AACA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AACrC,SAAOA,MAAM,CAACC,IAAP,GAAcC,KAAd,CAAoB,GAApB,EAAyBC,GAAzB,CAA6B,UAAAC,IAAI;AAAA,WAAKA,IAAI,CAACC,OAAL,CAAaD,IAAI,CAAC,CAAD,CAAjB,EAAsBA,IAAI,CAAC,CAAD,CAAJ,CAAQE,WAAR,EAAtB,CAAL;AAAA,GAAjC,EAAqFC,IAArF,CAA0F,GAA1F,CAAP;AACD,CAFM,C,CAIP;;AACA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACR,MAAD,EAAY;AACpC,MAAMS,MAAM,GAAGC,MAAM,CAAC,UAAD,EAAa,GAAb,CAArB;AACA,MAAIC,MAAM,GAAG,EAAb;AAEAX,EAAAA,MAAM,GAAGA,MAAM,CAAC,CAAD,CAAN,CAAUM,WAAV,KAA0BN,MAAM,CAACY,KAAP,CAAa,CAAb,CAAnC;;AAEA,SAAO,CAACD,MAAM,GAAGF,MAAM,CAACI,IAAP,CAAYb,MAAZ,CAAV,MAAmC,IAA1C,EAAgD;AAC9CA,IAAAA,MAAM,GAAGA,MAAM,CAACY,KAAP,CAAa,CAAb,EAAgBH,MAAM,CAACK,SAAvB,IAAoCd,MAAM,CAACS,MAAM,CAACK,SAAR,CAAN,CAAyBR,WAAzB,EAApC,GAA6EN,MAAM,CAACY,KAAP,CAAaH,MAAM,CAACK,SAAP,GAAmB,CAAhC,CAAtF;AACD;;AACD,SAAOd,MAAP;AACD,CAVM","sourcesContent":["// takes a string and returns a string with the first letter of every word capitalised\nexport const formatTitle = (string) => {\n  return string.trim().split(\" \").map(word => (word.replace(word[0], word[0].toUpperCase()))).join(\" \")\n}\n\n// takes a string and returns the string with the first letter of each sentence capitalised\nexport const formatText = (string) => {\n  const regex1 = RegExp(\"[!\\.?]+ \", 'g');\n  let array1 = [];\n\n  string = string[0].toUpperCase() + string.slice(1)\n\n  while ((array1 = regex1.exec(string)) !== null) {\n    string = string.slice(0, regex1.lastIndex) + string[regex1.lastIndex].toUpperCase() + string.slice(regex1.lastIndex + 1)\n  }\n  return string\n}\n\n"]},"metadata":{},"sourceType":"module"}