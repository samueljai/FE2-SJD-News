{"ast":null,"code":"import _defineProperty from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/src/Components/SingleArticle.jsx\";\nimport React, { Component } from 'react';\nimport Header from './Header';\nimport Comments from './Comments';\nimport { navigate } from '@reach/router';\nimport '../CSS/Articles.css';\nimport * as api from '../Utils/api';\nimport Voting from './Voting';\n\nvar SingleArticle =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleArticle, _Component);\n\n  function SingleArticle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SingleArticle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SingleArticle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      articlesLoading: true,\n      commentsLoading: true,\n      article: {},\n      comments: [],\n      commentCount: 0,\n      page: 1,\n      isLastPage: false,\n      newComment: \"\"\n    };\n\n    _this.fetchArticleById = function () {\n      var article_id = _this.props.article_id;\n      api.getArticleById(article_id).then(function (article) {\n        _this.setState({\n          article: article,\n          commentCount: parseInt(article.comment_count),\n          articlesLoading: false\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.fetchCommentsByArticleId = function () {\n      console.log(\"fetching comments\");\n      var article_id = _this.props.article_id;\n      var page = _this.state.page;\n      api.getCommentsByArticleId(article_id, page).then(function (comments) {\n        _this.setState({\n          comments: comments,\n          commentsLoading: false\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n      api.getCommentsByArticleId(article_id, page + 1).then(function (comments) {\n        if (!comments.length) _this.setState({\n          isLastPage: true,\n          commentsLoading: false\n        });else _this.setState({\n          isLastPage: false,\n          commentsLoading: false\n        });\n      }).catch(function (err) {\n        return _this.setState({\n          isLastPage: true,\n          commentsLoading: false\n        });\n      });\n    };\n\n    _this.updatePageNumber = function (direction) {\n      _this.setState(function (_ref) {\n        var page = _ref.page;\n        return {\n          page: page + direction\n        };\n      });\n    };\n\n    _this.resetPageNumber = function () {\n      _this.setState({\n        page: 1\n      });\n    };\n\n    _this.handleChange = function (event) {\n      var _event$target = event.target,\n          id = _event$target.id,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, id, value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault(); // get username from the state, articleId, username, body\n\n      var _this$props = _this.props,\n          article_id = _this$props.article_id,\n          username = _this$props.user.username;\n      var newComment = _this.state.newComment;\n      api.addCommentByArticleId(article_id, username, newComment).then(function (comment) {\n        _this.setState(function (_ref2) {\n          var comments = _ref2.comments,\n              commentCount = _ref2.commentCount;\n          return {\n            comments: comments.concat(comment),\n            commentCount: commentCount + 1,\n            newComment: \"\"\n          };\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteComment = function (comment_id) {\n      var article_id = _this.props.article_id;\n      api.deleteCommentByArticleId(article_id, comment_id).then(function () {\n        _this.setState(function (_ref3) {\n          var commentCount = _ref3.commentCount;\n          return {\n            commentCount: commentCount - 1\n          };\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteArticle = function (article_id) {\n      api.deleteArticle(article_id).then(function () {\n        // navigate to the articles page once deleted\n        navigate(\"/articles\");\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SingleArticle, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          toggleSidebar = _this$props2.toggleSidebar,\n          loggedIn = _this$props2.loggedIn,\n          username = _this$props2.user.username;\n      var _this$state = this.state,\n          article = _this$state.article,\n          articlesLoading = _this$state.articlesLoading,\n          comments = _this$state.comments,\n          commentCount = _this$state.commentCount,\n          commentsLoading = _this$state.commentsLoading,\n          page = _this$state.page,\n          isLastPage = _this$state.isLastPage,\n          newComment = _this$state.newComment;\n\n      if (!articlesLoading && !commentsLoading) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(Header, {\n          toggleSidebar: toggleSidebar,\n          heading: article.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }), React.createElement(\"main\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"articleCard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"articleInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, article.topic), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, new Date(new Date(article.created_at).toJSON()).toUTCString().slice(5, 16)), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, article.author), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, commentCount, \" Comments\"), React.createElement(Voting, {\n          votes: article.votes,\n          article_id: article.article_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }), article.author === username && React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.deleteArticle(article.article_id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"Delete\")), React.createElement(\"div\", {\n          className: \"articlBody\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, article.body)), React.createElement(\"div\", {\n          className: \"commentsBox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.updatePageNumber(-1);\n          },\n          disabled: page === 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Previous\"), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.updatePageNumber(1);\n          },\n          disabled: isLastPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"Next\"), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, commentCount, \" Comments\"), loggedIn && React.createElement(\"form\", {\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \" New Comment:\", React.createElement(\"textarea\", {\n          required: true,\n          id: \"newComment\",\n          value: newComment,\n          onChange: this.handleChange,\n          placeholder: \"Enter a new comment...\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Submit Comment\")), React.createElement(Comments, {\n          article_id: article.article_id,\n          comments: comments,\n          username: username,\n          deleteComment: this.deleteComment,\n          updateCommentVotes: this.updateCommentVotes,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        })))));\n      } else return React.createElement(\"p\", {\n        className: \"loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"is loading...\");\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchArticleById();\n      this.fetchCommentsByArticleId();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var articleUpdated = prevProps.article_id !== this.props.article_id;\n      var pageUpdated = prevState.page !== this.state.page;\n      var commentsUpdated = prevState.commentCount !== this.state.commentCount;\n      console.log(\"prev count\", prevState.commentCount);\n      console.log(\"current count\", this.state.commentCount);\n      if (commentsUpdated || articleUpdated) this.resetPageNumber();\n\n      if (commentsUpdated || pageUpdated || articleUpdated && this.state.page === 1) {\n        this.fetchCommentsByArticleId();\n      }\n    }\n  }]);\n\n  return SingleArticle;\n}(Component);\n\nexport default SingleArticle;","map":{"version":3,"sources":["/Users/samueljdesai/My Documents/My Northcoders/Module 5 - Front End 2/FE2-SJD-News/src/Components/SingleArticle.jsx"],"names":["React","Component","Header","Comments","navigate","api","Voting","SingleArticle","state","articlesLoading","commentsLoading","article","comments","commentCount","page","isLastPage","newComment","fetchArticleById","article_id","props","getArticleById","then","setState","parseInt","comment_count","catch","err","console","log","fetchCommentsByArticleId","getCommentsByArticleId","length","updatePageNumber","direction","resetPageNumber","handleChange","event","target","id","value","handleSubmit","preventDefault","username","user","addCommentByArticleId","comment","concat","deleteComment","comment_id","deleteCommentByArticleId","deleteArticle","toggleSidebar","loggedIn","title","topic","Date","created_at","toJSON","toUTCString","slice","author","votes","body","updateCommentVotes","prevProps","prevState","articleUpdated","pageUpdated","commentsUpdated"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header';\nimport Comments from './Comments';\nimport { navigate } from '@reach/router';\nimport '../CSS/Articles.css'\nimport * as api from '../Utils/api'\nimport Voting from './Voting';\n\nclass SingleArticle extends Component {\n  state = {\n    articlesLoading: true,\n    commentsLoading: true,\n    article: {},\n    comments: [],\n    commentCount: 0,\n    page: 1,\n    isLastPage: false,\n    newComment: \"\",\n  }\n\n  render() {\n    const { toggleSidebar, loggedIn, user: { username } } = this.props;\n    const { article, articlesLoading, comments, commentCount, commentsLoading, page, isLastPage, newComment } = this.state\n\n    if (!articlesLoading && !commentsLoading) {\n      return (\n        <React.Fragment>\n          <Header toggleSidebar={toggleSidebar} heading={article.title} />\n          <main>\n            <div className=\"articleCard\">\n              <div className=\"articleInfo\">\n                <p>{article.topic}</p>\n                <p>{new Date(new Date(article.created_at).toJSON()).toUTCString().slice(5, 16)}</p>\n                <p>{article.author}</p>\n                <p>{commentCount} Comments</p>\n                <Voting votes={article.votes} article_id={article.article_id} />\n                {article.author === username &&\n                  (<button onClick={() => this.deleteArticle(article.article_id)} >Delete</button>)\n                }\n              </div>\n              <div className=\"articlBody\">\n                <p>{article.body}</p>\n              </div>\n              <div className=\"commentsBox\">\n                <button onClick={() => this.updatePageNumber(-1)} disabled={page === 1}>Previous</button>\n                <button onClick={() => this.updatePageNumber(1)} disabled={isLastPage}>Next</button>\n                <h3>{commentCount} Comments</h3>\n                {(loggedIn) &&\n                  <form onSubmit={this.handleSubmit}> New Comment:\n                    <textarea required id=\"newComment\" value={newComment} onChange={this.handleChange} placeholder=\"Enter a new comment...\" />\n                    <button type=\"submit\">Submit Comment</button>\n                  </form>\n                }\n                <Comments article_id={article.article_id} comments={comments} username={username} deleteComment={this.deleteComment} updateCommentVotes={this.updateCommentVotes} />\n              </div>\n            </div>\n          </main>\n        </React.Fragment>\n      )\n    }\n    else return (<p className=\"loading\">is loading...</p>);\n  }\n\n  componentDidMount() {\n    this.fetchArticleById();\n    this.fetchCommentsByArticleId();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const articleUpdated = prevProps.article_id !== this.props.article_id;\n    const pageUpdated = prevState.page !== this.state.page;\n    const commentsUpdated = prevState.commentCount !== this.state.commentCount;\n    console.log(\"prev count\", prevState.commentCount)\n    console.log(\"current count\", this.state.commentCount)\n\n    if (commentsUpdated || articleUpdated) this.resetPageNumber();\n    if (commentsUpdated || pageUpdated || (articleUpdated && this.state.page === 1)) {\n      this.fetchCommentsByArticleId();\n    }\n  }\n\n  fetchArticleById = () => {\n    const { article_id } = this.props;\n    api.getArticleById(article_id)\n      .then(article => {\n        this.setState({ article, commentCount: parseInt(article.comment_count), articlesLoading: false })\n      })\n      .catch(err => console.log(err))\n  }\n\n  fetchCommentsByArticleId = () => {\n    console.log(\"fetching comments\")\n    const { article_id } = this.props;\n    const { page } = this.state;\n    api.getCommentsByArticleId(article_id, page)\n      .then(comments => {\n        this.setState({ comments, commentsLoading: false })\n      })\n      .catch(err => console.log(err))\n    api.getCommentsByArticleId(article_id, page + 1)\n      .then(comments => {\n        if (!comments.length) this.setState({ isLastPage: true, commentsLoading: false })\n        else this.setState({ isLastPage: false, commentsLoading: false })\n      })\n      .catch(err => this.setState({ isLastPage: true, commentsLoading: false }))\n  }\n\n  updatePageNumber = direction => {\n    this.setState(({ page }) => ({\n      page: page + direction\n    }))\n  }\n\n  resetPageNumber = () => {\n    this.setState({ page: 1 })\n  }\n\n  handleChange = (event) => {\n    const { id, value } = event.target;\n    this.setState({\n      [id]: value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    // get username from the state, articleId, username, body\n    const { article_id, user: { username } } = this.props\n    const { newComment } = this.state\n    api.addCommentByArticleId(article_id, username, newComment)\n      .then(comment => {\n        this.setState(({ comments, commentCount }) => {\n          return ({\n            comments: comments.concat(comment),\n            commentCount: commentCount + 1,\n            newComment: \"\"\n          })\n        })\n      })\n      .catch(err => console.log(err))\n  }\n\n  deleteComment = (comment_id) => {\n    const { article_id } = this.props;\n    api.deleteCommentByArticleId(article_id, comment_id)\n      .then(() => {\n        this.setState(({ commentCount }) => ({\n          commentCount: commentCount - 1,\n        }))\n      })\n      .catch(err => console.log(err));\n  };\n\n  deleteArticle = (article_id) => {\n    api.deleteArticle(article_id)\n      .then(() => {\n        // navigate to the articles page once deleted\n        navigate(`/articles`);\n      })\n      .catch(err => console.log(err));\n  };\n}\n\nexport default SingleArticle;"]},"metadata":{},"sourceType":"module"}